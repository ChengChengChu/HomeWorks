from pwn import *
from Cryptodome.Util.number import getPrime, isPrime, bytes_to_long, long_to_bytes

def recv_to_send_guess(p) :
    p.recvuntil(b'choice: ')
    p.sendline('1'.encode())
    p.recvuntil(b'(hex encoded): ')
    
    return

def decrypt_block(c, idx, p) :
    p.interactive()


def main() :
    # p = remote('cns.csie.org', 44399)
    p = process(['python', 'server.py'])
    p.recvuntil(b'ID: ')
    ID = p.recvuntil(b'----+', drop=True).decode().replace('\n', '').replace('-', '').replace('+', '').replace('|', '').replace(' ', '')
    ####### set mode to get oracle ##########
    p.recvuntil(b'our choice: ')
    p.sendline('2'.encode())
    ####### construct hex blocks ############
    # print(ID, len(ID))
    
    tmp = bytes.fromhex(ID)
    # print(tmp, len(tmp))
    c, t = [], []
    idx = 0
    while idx < len(tmp) :
        t.append(long_to_bytes(tmp[idx]))
        if len(t) == 16 : 
            c.append(t)
            t = []
        
        idx += 1
    
    decrypt_block(c, len(c) - 1, p)
     


if __name__ == '__main__' :
    main()
